package com.weVideo.controller;

import java.util.UUID;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.weVideo.pojo.Users;
import com.weVideo.pojo.vo.UsersVO;
import com.weVideo.service.UserService;
import com.weVideo.utils.IMoocJSONResult;
import com.weVideo.utils.MD5Utils;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

@RestController
@Api(value="用户注册的接口",tags = {"注册和登录的controller"})
public class RegistLoginController extends BasicController{
	
	@Autowired
	private UserService userService;
	
	@ApiOperation(value="用户注册", notes="用户注册的接口")
	@PostMapping("/regist")
	public IMoocJSONResult regist(@RequestBody Users user) throws Exception {
		if(StringUtils.isBlank(user.getUsername()) || StringUtils.isBlank(user.getPassword()))
			return IMoocJSONResult.errorMsg("用户名或密码不能为空");
		
		boolean usernameIsExist = userService.queryUsernameIsExist(user.getUsername());
		
		if(!usernameIsExist) {
			user.setNickname(user.getUsername());
			user.setPassword(MD5Utils.getMD5Str(user.getPassword()));
			user.setFansCounts(0);
			user.setReceiveLikeCounts(0);
			user.setFollowCounts(0);
			user.setBan(0);
			userService.saveUser(user);
			
		}else {
			return IMoocJSONResult.errorMsg("用户名已存在");
		}
		user.setPassword("");
		String uniqueToken = UUID.randomUUID().toString();
		redis.set(USER_REDIS_SESSION + ":" + user.getId(),uniqueToken,1000*60*30);
		
		UsersVO userVO = new UsersVO();
		BeanUtils.copyProperties(user, userVO);
		userVO.setUserToken(uniqueToken);
		System.out.println(uniqueToken);
		return IMoocJSONResult.ok(userVO);
	}
	
	@ApiOperation(value="用户登录", notes = "用户登录的接口")
	@PostMapping("/login")
	public IMoocJSONResult login(@RequestBody Users user) throws Exception {
		String username = user.getUsername();
		String password = user.getPassword();
		
		if(StringUtils.isBlank(username) || StringUtils.isBlank(password)) {
			return IMoocJSONResult.ok("用户名或密码不能为空");
			
		}
		
		Users userResult = userService.queryUserForLogin(username, MD5Utils.getMD5Str(password));
		
		if(userResult != null) {
			userResult.setPassword("");
			return IMoocJSONResult.ok(userResult);
		}else {
			return IMoocJSONResult.errorMsg("用户名或密码不正确，请重试");
		}
		
	}
	
}